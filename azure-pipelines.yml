trigger:
- main # Cambia 'main' por la rama que activará el pipeline

pool:
  vmImage: 'ubuntu-latest'

variables:
  dockerRegistryServiceConnection: 'DockerHub' # La Service Connection a Docker Hub
  imageName: 'usuario/mi-imagen' # Nombre de la imagen en Docker Hub (sin etiquetas)
  imageTag: '$(Build.BuildId)'  # Tag dinámico basado en el ID de la build

stages:
- stage: Build
  displayName: Build and Push Docker Image
  jobs:
  - job: Build
    displayName: Build Job
    steps:
    - checkout: self
      displayName: "Clonar el repositorio"

    # Autenticarse en Docker Hub
    - task: Docker@2
      displayName: "Login en Docker Hub"
      inputs:
        command: login
        containerRegistry: $(dockerRegistryServiceConnection)

    # Construir la nueva imagen usando el Dockerfile en la carpeta app
    - task: Docker@2
      displayName: "Construir imagen Docker desde app/Dockerfile"
      inputs:
        command: build
        dockerfile: app/Dockerfile         # Ruta al Dockerfile en la carpeta app
        buildContext: app                  # Contexto de construcción
        containerRegistry: $(dockerRegistryServiceConnection)
        repository: $(imageName)           # Nombre de la imagen sin etiquetas
        tags: |
          $(imageTag)                      # Etiqueta basada en el Build ID

    # Subir la imagen construida a Docker Hub
    - task: Docker@2
      displayName: "Push de la imagen a Docker Hub"
      inputs:
        command: push
        containerRegistry: $(dockerRegistryServiceConnection)
        repository: $(imageName)
        tags: |
          $(imageTag)