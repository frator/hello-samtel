trigger:
- main  # Cambia 'main' por la rama que deseas usar

jobs:
- job: SonarQubeAnalysis
  displayName: "SonarQube Analysis using Docker"
  pool:
    vmImage: 'ubuntu-latest'

  container: 
    image: python:3.10-slim  # Imagen Docker basada en Debian/Ubuntu
    options: '--user root --privileged'  

  steps:
  # Paso 1: Cambiar al directorio de trabajo
  - script: |
      cd app
      echo "Ahora trabajando en la carpeta $(pwd)"
    displayName: 'Cambiar al directorio app'
    workingDirectory: $(System.DefaultWorkingDirectory)/app
    
  # Establecer un directorio alternativo para apt
  - script: |
      echo "Configurando entorno de APT en un directorio temporal..."
      mkdir -p /tmp/apt/lists/partial
      mkdir -p /tmp/apt/cache
      chmod -R 777 /tmp/apt
      apt-get -o Dir::State::Lists=/tmp/apt/lists -o Dir::Cache::Archives=/tmp/apt/cache update
      apt-get -o Dir::State::Lists=/tmp/apt/lists -o Dir::Cache::Archives=/tmp/apt/cache install -y bash curl openjdk-11-jdk
    displayName: 'Configurar entorno con APT'

  # Paso 2: Configurar el entorno
#  - script: |
#      echo "Instalando dependencias necesarias..."
#      apt-get update && apt-get install -y bash curl openjdk-11-jdk
#    displayName: 'Configurar Entorno'

  # Paso 2.5: Verificar Python y Java
  - script: |
      python --version
      java -version
    displayName: 'Verificar instalaci칩n'

  # Paso 3: Preparar SonarQube
  - task: SonarQubePrepare@5
    inputs:
      scannerMode: 'CLI'
      configMode: 'manual'
      cliProjectKey: $(SONARQUBE_PROJECT_KEY)
      cliProjectName: $(SONARQUBE_PROJECT_KEY)
      cliSources: './'  # Analizar solo la carpeta app
      extraProperties: |
        sonar.host.url=$(SONARQUBE_HOST_URL)
        sonar.login=$(SONARQUBE_TOKEN)

  # Paso 4: Compilar y/o analizar el c칩digo
  - script: |
      echo "Analizando el c칩digo fuente..."
      python --version
      python3 -m pip install -r requirements.txt || true
    displayName: 'Compilar Proyecto'
    workingDirectory: $(System.DefaultWorkingDirectory)/app

  # Paso 5: Ejecutar el an치lisis de SonarQube
  - task: SonarQubeAnalyze@5

  # Paso 6: Publicar resultados en SonarQube
  - task: SonarQubePublish@5
    inputs:
      pollingTimeoutSec: '300'
